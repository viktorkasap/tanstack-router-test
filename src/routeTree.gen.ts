/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './app/routes/__root'
import { Route as Import } from './app/routes/*'
import { Route as TodosIndexImport } from './app/routes/todos/index'
import { Route as TodosTodoIdImport } from './app/routes/todos/$todoId'
import { Route as PostsPostIdImport } from './app/routes/posts/$postId'
import { Route as LayoutsLayoutBImport } from './app/routes/_layouts/layout-b'
import { Route as LayoutsLayoutAImport } from './app/routes/_layouts/layout-a'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const AboutIndexLazyImport = createFileRoute('/about/')()
const PostsRouteIndexLazyImport = createFileRoute('/posts/route/')()

// Create/Update Routes

const Route = Import.update({
  path: '/*',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./app/routes/index.lazy').then((d) => d.Route))

const AboutIndexLazyRoute = AboutIndexLazyImport.update({
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./app/routes/about/index.lazy').then((d) => d.Route),
)

const TodosIndexRoute = TodosIndexImport.update({
  path: '/todos/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./app/routes/todos/index.lazy').then((d) => d.Route),
)

const TodosTodoIdRoute = TodosTodoIdImport.update({
  path: '/todos/$todoId',
  getParentRoute: () => rootRoute,
} as any)

const PostsPostIdRoute = PostsPostIdImport.update({
  path: '/posts/$postId',
  getParentRoute: () => rootRoute,
} as any)

const LayoutsLayoutBRoute = LayoutsLayoutBImport.update({
  id: '/_layouts/layout-b',
  getParentRoute: () => rootRoute,
} as any)

const LayoutsLayoutARoute = LayoutsLayoutAImport.update({
  id: '/_layouts/layout-a',
  getParentRoute: () => rootRoute,
} as any)

const PostsRouteIndexLazyRoute = PostsRouteIndexLazyImport.update({
  path: '/posts/route/',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./app/routes/posts/route.index.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/*': {
      preLoaderRoute: typeof Import
      parentRoute: typeof rootRoute
    }
    '/_layouts/layout-a': {
      preLoaderRoute: typeof LayoutsLayoutAImport
      parentRoute: typeof rootRoute
    }
    '/_layouts/layout-b': {
      preLoaderRoute: typeof LayoutsLayoutBImport
      parentRoute: typeof rootRoute
    }
    '/posts/$postId': {
      preLoaderRoute: typeof PostsPostIdImport
      parentRoute: typeof rootRoute
    }
    '/todos/$todoId': {
      preLoaderRoute: typeof TodosTodoIdImport
      parentRoute: typeof rootRoute
    }
    '/todos/': {
      preLoaderRoute: typeof TodosIndexImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      preLoaderRoute: typeof AboutIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/posts/route/': {
      preLoaderRoute: typeof PostsRouteIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  Route,
  LayoutsLayoutARoute,
  LayoutsLayoutBRoute,
  PostsPostIdRoute,
  TodosTodoIdRoute,
  TodosIndexRoute,
  AboutIndexLazyRoute,
  PostsRouteIndexLazyRoute,
])

/* prettier-ignore-end */
